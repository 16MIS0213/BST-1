public class Solution {
	public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr){
        return sortedArrayToBST(arr,0,arr.length);
	}
    public static BinaryTreeNode<Integer> sortedArrayToBST(int arr[],int si,int ei){
        if(si>=ei){
            return null;
        }
        int mi;
        if((si+ei)%2 == 0){
            mi = ((si+ei)/2) - 1;
        }
        else{
            mi = (si+ei)/2;
        }
        BinaryTreeNode<Integer> root=new BinaryTreeNode<Integer>(arr[mi]);
        root.left = sortedArrayToBST(arr,si,mi);
        root.right = sortedArrayToBST(arr,mi+1,ei);
         return root;
    }
    public static void preOrder(BinaryTreeNode<Integer> root){
        if(root==null){
            return;
        }
        System.out.print(root.data+" ");
        preOrder(root.left);
        preOrder(root.right);
    }
}